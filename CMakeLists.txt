# ==================================================================
#  tubex-lib - cmake configuration file
# ==================================================================

cmake_minimum_required(VERSION 3.0.2)

project(TUBEX VERSION 2.0.0 LANGUAGES CXX)
set(TUBEX_DESCRIPTION "Library providing tools to guarantee computations over sets of trajectories")
set(TUBEX_URL "http://simon-rohou.fr/research/tubex-lib")


################################################################################
# Options for install directory
################################################################################

set(CMAKE_INSTALL_INCLUDEDIR "include" CACHE PATH "C++ header files (include)")
set(CMAKE_INSTALL_LIBDIR "lib" CACHE PATH "object code libraries (lib)")
set(CMAKE_INSTALL_BINDIR "bin" CACHE PATH "user executables (bin)")
set(CMAKE_INSTALL_PKGCONFIG "share/pkgconfig" CACHE PATH "pkg files (share/pkgconfig)")


################################################################################
# Check that the compiler supports c++11
################################################################################

include(CheckCXXCompilerFlag)

check_cxx_compiler_flag("-std=c++11" COMPILER_SUPPORTS_CXX11)
if(COMPILER_SUPPORTS_CXX11)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
else()
  message(FATAL_ERROR "Tubex needs a compiler with C++11 support")
endif()

if(WIN32)
  # We need this for strdup under Windows (see issue #287 of ibex-lib repo)
  add_definitions(-U__STRICT_ANSI__)
endif ()


################################################################################
# Optional binary tree activation for all tubes (for tests purposes mainly)
################################################################################

if(NOT DEFINED AUTO_SYNTHESIS_BY_DEFAULT)
  set(AUTO_SYNTHESIS_BY_DEFAULT false) # direct tubes by default
endif()
add_definitions(-DAUTO_SYNTHESIS_BY_DEFAULT=${AUTO_SYNTHESIS_BY_DEFAULT})
message(STATUS "Using binary trees for tubes: " ${AUTO_SYNTHESIS_BY_DEFAULT})


################################################################################
# Removing warnings from GAOL
################################################################################

# With Gaol, we add "-Wno-deprecated" to remove lots of warnings generated by
# a function definition in gaol_interval.h
check_cxx_compiler_flag("-Wno-deprecated" COMPILER_SUPPORTS_WNO_DEPRECATED)
if(COMPILER_SUPPORTS_WNO_DEPRECATED)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated")
endif()


################################################################################
# Looking for Ibex
################################################################################

#find_package(IBEX 2.8.3 REQUIRED)
include(FindPkgConfig)
pkg_search_module(IBEX REQUIRED ibex) # todo: specify minimum version of IBEX
message(STATUS "Found Ibex version ${IBEX_VERSION}")


################################################################################
# Compile sources
################################################################################

add_subdirectory (src)


################################################################################
# Tests
################################################################################

#include(CTest)
#if(BUILD_TESTING)
#  add_custom_target(check
#                    COMMAND ${CMAKE_CTEST_COMMAND} --output-on-failure $(ARGS)
#                    DEPENDS ibex-plugin COMMENT "Running the tests")
#  add_subdirectory(tests EXCLUDE_FROM_ALL)
#endif()


################################################################################
# Archives and packages
################################################################################

set(CPACK_GENERATOR "TGZ" "ZIP" "DEB")
string(TOLOWER "${CMAKE_PROJECT_NAME}" CPACK_PACKAGE_NAME)
set(CPACK_PACKAGE_VENDOR "TubexTeam")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ${TUBEX_DESCRIPTION})
set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})

set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Maintainer <simon.rohou@ensta-bretagne.fr>")
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE ${TUBEX_URL})
# TODO finish deb package

include(CPack)